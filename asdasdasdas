-- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()

-- Basic Pet Inventory
local PetInventory = {}    -- list of pet Models
local EquippedPet = nil    -- current pet being held

-- Pet Handler
local function equipPet(petModel)
    if EquippedPet then EquippedPet.Parent = workspace end
    EquippedPet = petModel
    EquippedPet.Parent = char
    EquippedPet:SetPrimaryPartCFrame(char.PrimaryPart.CFrame * CFrame.new(1, 0, -1))
    return EquippedPet
end

-- Gui Setup
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "PetDuplicator_GUI"

local dupBtn = Instance.new("TextButton", screenGui)
dupBtn.Size = UDim2.new(0, 200, 0, 50)
dupBtn.Position = UDim2.new(0.5, -100, 0.8, 0)
dupBtn.BackgroundColor3 = Color3.new(0, 0, 0)
dupBtn.Text = "Duplicate Pet"
dupBtn.TextColor3 = Color3.new(1, 1, 1)
dupBtn.Font = Enum.Font.GothamBold
dupBtn.TextSize = 22

local msgLbl = Instance.new("TextLabel", screenGui)
msgLbl.Size = UDim2.new(0, 200, 0, 30)
msgLbl.Position = UDim2.new(0.5, -100, 0.75, 0)
msgLbl.BackgroundTransparency = 1
msgLbl.TextColor3 = Color3.new(1, 0, 0)
msgLbl.Font = Enum.Font.Gotham
msgLbl.TextSize = 18
msgLbl.Visible = false

-- Inventory display
local invLbl = Instance.new("TextLabel", screenGui)
invLbl.Size = UDim2.new(0, 300, 0, 100)
invLbl.Position = UDim2.new(0, 20, 0, 20)
invLbl.BackgroundColor3 = Color3.new(0, 0, 0)
invLbl.TextColor3 = Color3.new(1, 1, 1)
invLbl.Font = Enum.Font.Gotham
invLbl.TextSize = 18
invLbl.Text = "Inventory (0/3)"

-- Function to refresh inventory display
local function refreshInv()
    invLbl.Text = "Inventory ("..#PetInventory.."/3): "
    for i, p in ipairs(PetInventory) do
        invLbl.Text ..= "\n"..i..". "..p.Name
    end
end

-- Duplicate logic
dupBtn.MouseButton1Click:Connect(function()
    if not EquippedPet then
        msgLbl.Text = "Hold a Pet!"
        msgLbl.Visible = true
        task.delay(2, function() msgLbl.Visible = false end)
        return
    end

    if #PetInventory >= 3 then
        msgLbl.Text = "Inventory Full!"
        msgLbl.Visible = true
        task.delay(2, function() msgLbl.Visible = false end)
        return
    end

    -- Clone pet
    local orig = EquippedPet
    local clone = orig:Clone()
    clone.Name = orig.Name .. "_dup"
    clone.Parent = workspace

    -- Copy physics
    for _, part in ipairs(orig:GetDescendants()) do
        if part:IsA("BasePart") then
            local cp = clone:FindFirstChild(part.Name, true)
            if cp then cp.CustomPhysicalProperties = part.CustomPhysicalProperties end
        end
    end

    -- Copy animations if any
    local humanoid = orig:FindFirstChildOfClass("Humanoid")
    if humanoid and humanoid.Animator then
        local newHum = clone:FindFirstChildOfClass("Humanoid")
        if not newHum then newHum = Instance.new("Humanoid", clone) end
        -- copy animator tracks
        for _, track in ipairs(humanoid.Animator:GetPlayingAnimationTracks()) do
            local new = newHum.Animator:LoadAnimation(track.Animation)
            new:Play()
        end
    end

    -- Add clone to inventory
    table.insert(PetInventory, clone)
    refreshInv()
end)

-- Example pet-hold binding (for testing)
-- Press 1, 2, or 3 to equip a pet from inventory
player:GetMouse().KeyDown:Connect(function(key)
    local idx = tonumber(key)
    if idx and PetInventory[idx] then
        equipPet(PetInventory[idx])
    end
end)

-- Initial equip if dropped pet in workspace
for _, obj in ipairs(workspace:GetChildren()) do
    if obj.Name == "Pet" and obj:IsA("Model") then
        table.insert(PetInventory, obj)
        refreshInv()
        if #PetInventory == 1 then equipPet(PetInventory[1]) end
        break
    end
end
-- Draggable Frame that holds the button
local draggableFrame = Instance.new("Frame", screenGui)
draggableFrame.Size = UDim2.new(0, 220, 0, 60)
draggableFrame.Position = UDim2.new(0.5, -110, 0.8, 0)
draggableFrame.BackgroundTransparency = 1
draggableFrame.Active = true
draggableFrame.Draggable = true -- Make the frame draggable

-- Duplicate button inside the draggable frame
local duplicateButton = Instance.new("TextButton", draggableFrame)
duplicateButton.Size = UDim2.new(1, 0, 1, 0)
duplicateButton.Position = UDim2.new(0, 0, 0, 0)
duplicateButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
duplicateButton.TextColor3 = Color3.fromRGB(255, 255, 255)
duplicateButton.Font = Enum.Font.GothamBold
duplicateButton.TextSize = 22
duplicateButton.Text = "Duplicate Pet"
duplicateButton.Name = "DuplicateButton"
